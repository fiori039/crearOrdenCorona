/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "com/corona/Component-preload",
	"modules": {
		"com/corona/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"com/corona/model/models\",\n\t\"com/corona/controller/ListSelector\",\n\t\"com/corona/controller/ErrorHandler\"\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"com.corona.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this method, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\tthis.oListSelector = new ListSelector();\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t// call the base component's init function and create the App view\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.oListSelector.destroy();\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"com/corona/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"com/corona/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"com/corona/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\"\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast) {\n\t\"use strict\";\n\tvar _timeout;\n\n\treturn BaseController.extend(\"com.corona.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonDelete: function() {\n\t\t\tvar that = this;\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Qmtxt\"),\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\n\n\t\t\tvar fnMyAfterDeleted = function() {\n\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tquestion: sQuestion\n\t\t\t}, [sPath], fnMyAfterDeleted);\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonEdit: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tobjectPath: sObjectPath\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\n\t\t\tfor (var value in oParameter) {\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\n\t\t\t}\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"AvisoSet\", oParameter);\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\n\t\t\tthis.f_reiniciar_datosPantalla();\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for binding change event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Qmnum,\n\t\t\t\tsObjectName = oObject.Qmtxt;\n\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t},\n\n\t\t/**\n\t\t * Event handler for metadata loaded event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * title (optional) may be a string defining the title of the popup.\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done.\n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\n\t\t\t}.bind(this);\n\n\t\t\t// Opens the confirmation dialog\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Performs the deletion of a list of entities.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done.\n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\tvar fnFailed = function() {\n\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t}.bind(this);\n\t\t\tvar fnSuccess = function() {\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t}.bind(this);\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\n\t\t},\n\n\t\t/**\n\t\t * Deletes the entity from the odata model\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.setUseBatch(false);\n\t\t\t\tthis._oODataModel.remove(sPath, {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t},\n\n\t\t//Funciones nuevas a partir de acá\n\t\tonAfterRendering: function() {\n\t\t\t//Add Johnny López\n\t\t\tthis.getView().byId(\"dateFecha\").setDateValue(new Date());\n\n\t\t},\n\n\t\tf_ayuda_busqueda_material: function(event) {\n\t\t\tif (!this._dialogo_material) {\n\t\t\t\tthis._dialogo_material = sap.ui.xmlfragment(\n\t\t\t\t\t\"com.corona.view.fragment.DlgMaterial\",\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tthis.getView().addDependent(this._dialogo_material);\n\t\t\t}\n\n\t\t\t// open value help dialog\n\t\t\tthis._dialogo_material.open();\n\t\t},\n\n\t\t/**\n\t\t * Implementar la búsqueda de Materiales\n\t\t * @function\n\t\t * @param {Object} evt Evento ejecutado cuando el cliente oprime icono Buscar\n\t\t * @public\n\t\t */\n\t\tf_Search_material: function(evt) {\n\t\t\tvar sValue = evt.getParameter(\"value\"),\n\t\t\t\tWerks = this.getView().getBindingContext().getProperty(\"Werks\");\n\n\t\t\t//Add Jhony Lopez\n\t\t\tvar filters = [];\n\t\t\tvar sFilter;\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, Werks);\n\t\t\tfilters.push(sFilter);\n\n\t\t\tsFilter = new sap.ui.model.Filter(\"Matnr\", sap.ui.model.FilterOperator.EQ, '*' + sValue + '*');\n\t\t\tfilters.push(sFilter);\n\n\t\t\tsFilter = new sap.ui.model.Filter(\"Maktx\", sap.ui.model.FilterOperator.EQ, '*' + sValue + '*');\n\t\t\tfilters.push(sFilter);\n\n\t\t\tvar binding = evt.getSource().getBinding(\"items\");\n\t\t\tbinding.filter(filters);\n\t\t},\n\n\t\tf_caracteristica_material: function(evt, p_material) {\n\t\t\tvar lista = this.byId(\"tableCaracteristicas\"),\n\t\t\t\tfilters = [],\n\t\t\t\tquery = p_material,\n\t\t\t\tbinding = lista.getBinding(\"items\");\n\n\t\t\tbinding.filter(filters);\n\t\t\tfilters = new sap.ui.model.Filter(\"Matnr\", sap.ui.model.FilterOperator.EQ, query);\n\n\t\t\tbinding.filter(filters);\n\n\t\t\tthis.f_visualizar_datos_material(true);\n\t\t},\n\n\t\tf_confirm_material: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\n\n\t\t\t//Reinicia los items del valor del modelo en blanco, cada vez que se cambie de material seleccionado\n\t\t\tfor (var i in this.getView().byId(\"tableCaracteristicas\").getItems()) {\n\t\t\t\tif (this.getView().byId(\"tableCaracteristicas\").getItems().hasOwnProperty(i)) {\n\t\t\t\t\tthis.getView().byId(\"tableCaracteristicas\").getItems()[i].getCells()[1].setValue(null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oSelectedItem) {\n\t\t\t\tvar material = this.getView().byId(\"inputMaterial\");\n\t\t\t\tmaterial.setValue(oSelectedItem.getTitle() + \"-\" + oSelectedItem.getDescription());\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\n\t\t\tthis.f_caracteristica_material(evt, oSelectedItem.getTitle());\n\t\t},\n\n\t\tf_valor_caracteristica_material: function(evt, p_material) {\n\t\t\tvar lista = sap.ui.getCore().byId(\"list_ValorCaractMaterial\"),\n\t\t\t\tfilters1 = [],\n\t\t\t\tfilters2 = [],\n\t\t\t\tfiltros = [],\n\t\t\t\tquery = p_material,\n\t\t\t\tcarac = evt.oSource.oParent.getBindingContext().getProperty(\"Name\");\n\n\t\t\tfilters1 = new sap.ui.model.Filter(\"Matnr\", sap.ui.model.FilterOperator.EQ, query);\n\t\t\tfilters2 = new sap.ui.model.Filter(\"Name\", sap.ui.model.FilterOperator.EQ, carac);\n\n\t\t\tfiltros = new sap.ui.model.Filter([filters1, filters2], true);\n\n\t\t\tvar binding = lista.getBinding(\"items\");\n\t\t\tbinding.filter(filtros);\n\n\t\t\t//Guardar path del item seleccionado para asignarle el valor de la ayuda de búsqueda\n\t\t\tthis.v_pathItemCaracteristica = evt.oSource.oParent.getBindingContext();\n\n\t\t},\n\n\t\tf_ayuda_busqueda_caracteristica: function(event) {\n\t\t\tvar material = event.oSource.oParent.getBindingContext().getProperty(\"Matnr\");\n\t\t\tif (!this._dialogo_caracteristica) {\n\t\t\t\tthis._dialogo_caracteristica = sap.ui.xmlfragment(\n\t\t\t\t\t\"com.corona.view.fragment.DlgValorCaractMaterial\",\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tthis.getView().addDependent(this._dialogo_caracteristica);\n\t\t\t}\n\n\t\t\t// open value help dialog\n\t\t\tthis._dialogo_caracteristica.open();\n\t\t\tthis.f_valor_caracteristica_material(event, material);\n\t\t},\n\n\t\tf_confirm_valor_caracteristica: function(evt) {\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\"),\n\t\t\t\t//Obtener el path del item seleccionado y la propiedad value que se va modificar\n\t\t\t\tpathItemSelec = this.v_pathItemCaracteristica.getPath() + \"/Value\";\n\n\t\t\tif (oSelectedItem) {\n\t\t\t\tthis.v_pathItemCaracteristica.getModel().setProperty(pathItemSelec, oSelectedItem.getTitle());\n\t\t\t}\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\n\t\t},\n\n\t\tf_visualizar_datos_material: function(p_visualizar) {\n\t\t\tthis.byId(\"tableCaracteristicas\").setVisible(p_visualizar);\n\t\t\tthis.byId(\"labelInicio\").setVisible(p_visualizar);\n\t\t\tthis.byId(\"dateFecha\").setVisible(p_visualizar);\n\t\t\tthis.byId(\"inputFecha\").setVisible(p_visualizar);\n\t\t},\n\n\t\tf_reiniciar_datosPantalla: function() {\n\t\t\tthis.getView().byId(\"inputMaterial\").setValue(null);\n\t\t\tthis.f_visualizar_datos_material(false);\n\t\t},\n\n\t\tf_crearOrden: function(p_event) {\n\t\t\tthis.onOpenDialog(p_event);\n\t\t\tthis.f_crearOrdenServicio(p_event);\n\t\t},\n\n\t\tf_crearOrdenServicio: function(p_event) {\n\t\t\tvar aviso = this.getView().getBindingContext().getProperty('Qmnum'),\n\t\t\t\tcentro = this.getView().getBindingContext().getProperty('Werks'),\n\t\t\t\tpttara = this.getView().getBindingContext().getProperty('Puest'),\n\t\t\t\tmat = this.getView().byId(\"inputMaterial\").getValue().split('-', 1)[0],\n\t\t\t\tserviceUrl = this.getView().getBindingContext().oModel.sServiceUrl,\n\t\t\t\tmodelo,\n\t\t\t\tcaract,\n\t\t\t\torden,\n\t\t\t\tmensaje,\n\t\t\t\ttp_mensaje;\n\n\t\t\tcaract = this.f_mapear_caracteristicas();\n\n\t\t\torden = {\n\t\t\t\tQmnum: aviso,\n\t\t\t\tArbpl: pttara,\n\t\t\t\tWerks: centro,\n\t\t\t\tMatnr: mat,\n\t\t\t\tCarac: caract\n\t\t\t};\n\n\t\t\t// modelo = this.f_crear_modelo(serviceUrl, true);\n\n\t\t\t// mensaje = this.f_crear_entity(modelo, \"/OrdenSet\", orden);\n\n\t\t\t// tp_mensaje = mensaje.split('-', 2);\n\n\t\t\t// simulate end of operation\n\t\t\t_timeout = jQuery.sap.delayedCall(500, this, function() {\n\t\t\t\tmodelo = this.f_crear_modelo(serviceUrl, true);\n\t\t\t\tmensaje = this.f_crear_entity(modelo, \"/OrdenSet\", orden);\n\t\t\t\ttp_mensaje = mensaje.split('-', 2);\n\t\t\t\tthis._dialog.close();\n\t\t\t\tthis.handleErrorMessageBoxPress(p_event, tp_mensaje[1], tp_mensaje[0]);\n\t\t\t});\n\t\t\t\n\t\t},\n\n\t\tf_mapear_caracteristicas: function() {\n\t\t\tvar caract,\n\t\t\t\tvalue;\n\n\t\t\tfor (var i in this.getView().byId(\"tableCaracteristicas\").getItems()) {\n\t\t\t\tif (this.getView().byId(\"tableCaracteristicas\").getItems().hasOwnProperty(i)) {\n\n\t\t\t\t\tif (this.getView().byId(\"tableCaracteristicas\").getItems()[i].getCells()[1].getValue() === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tcaract = this.getView().byId(\"tableCaracteristicas\").getItems()[i].getCells()[0].getValue() + \"-\" + this.getView().byId(\n\t\t\t\t\t\t\"tableCaracteristicas\").getItems()[i].getCells()[1].getValue() + \";\";\n\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = caract;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = value + caract;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value) {\n\t\t\t\treturn value.slice(0, -1);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t},\n\n\t\tf_crear_modelo: function(p_serviceUrl, p_json) {\n\t\t\tvar oModel = new sap.ui.model.odata.ODataModel(p_serviceUrl, p_json);\n\t\t\treturn oModel;\n\t\t},\n\n\t\tf_crear_entity: function(p_modelo, p_entidad, p_datoEndidad) {\n\t\t\tvar mensaje;\n\n\t\t\tvar fnSucess = function(data, response) {\n\t\t\t\tmensaje = data.Texto;\n\t\t\t\tmensaje = \"success\" + \"-\" + mensaje;\n\t\t\t};\n\t\t\tvar fnError = function(e) {\n\t\t\t\tmensaje = JSON.parse(e.response.body);\n\t\t\t\tmensaje = mensaje.error.message.value;\n\t\t\t\tmensaje = \"error\" + \"-\" + mensaje;\n\t\t\t};\n\n\t\t\t//Crear datos nuevos del formulario profesional tabla sap ZSDT_060\n\t\t\tp_modelo.create(p_entidad, p_datoEndidad, null, fnSucess, fnError, false);\n\n\t\t\treturn mensaje;\n\t\t},\n\n\t\thandleErrorMessageBoxPress: function(p_evetn, p_message, p_type) {\n\t\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\n\t\t\tswitch (p_type) {\n\t\t\t\tcase \"error\":\n\t\t\t\t\tMessageBox.error(\n\t\t\t\t\t\tp_message, {\n\t\t\t\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"success\":\n\t\t\t\t\tMessageBox.success(\n\t\t\t\t\t\tp_message, {\n\t\t\t\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\n\t\tonOpenDialog: function(oEvent) {\n\t\t\t// instantiate dialog\n\t\t\tif (!this._dialog) {\n\t\t\t\tthis._dialog = sap.ui.xmlfragment(\"com.corona.view.fragment.BusyDialog\", this);\n\t\t\t\tthis.getView().addDependent(this._dialog);\n\t\t\t}\n\n\t\t\t// open dialog\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._dialog);\n\t\t\tthis._dialog.open();\n\n\t\t\t// // simulate end of operation\n\t\t\t// _timeout = jQuery.sap.delayedCall(3000, this, function() {\n\t\t\t// \tthis._dialog.close();\n\t\t\t// });\n\t\t},\n\n\t\tonDialogClosed: function(oEvent) {\n\t\t\tjQuery.sap.clearDelayedCall(_timeout);\n\n\t\t\tif (oEvent.getParameter(\"cancelPressed\")) {\n\t\t\t\tMessageToast.show(\"The operation has been cancelled\");\n\t\t\t} else {\n\t\t\t\tMessageToast.show(\"The operation has been completed\");\n\t\t\t}\n\t\t}\n\t});\n});",
		"com/corona/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"com/corona/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"com/corona/model/formatter\",\n\t\"sap/m/MessageBox\"\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.corona.controller.Master\", {\n\t\toPersonalizationDialog: null,\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Control state model\n\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t// taken care of by the master list itself.\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\n\n\t\t\tthis._oList = oList;\n\t\t\t// keeps the filter and search state\n\t\t\tthis._oListFilterState = {\n\t\t\t\taFilter: [],\n\t\t\t\taSearch: []\n\t\t\t};\n\n\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeFirstShow: function() {\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * After list data is available, this handler method updates the\n\t\t * master list counter and hides the pull to refresh control, if\n\t\t * necessary.\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the master list object counter after new data is loaded\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t// hide pull to refresh if necessary\n\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\tthis._findItem();\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\n\t\t\tif (!this.abrir_dialogo) {\n\t\t\t\tthis.abrir_dialogo = true;\n\t\t\t\t//Agregar Dialogo\n\t\t\t\tthis.f_open_dialog_login();\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the master search field. Applies current\n\t\t * filter value and triggers a new search. If the search field's\n\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t * and the list binding is refresh instead.\n\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t * @public\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery) {\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Qmtxt\", FilterOperator.Contains, sQuery)];\n\t\t\t} else {\n\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t}\n\t\t\tthis._applyFilterSearch();\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t * and group settings and refreshes the list binding.\n\t\t * @public\n\t\t */\n\t\tonRefresh: function() {\n\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the sorter selection.\n\t\t * @param {sap.ui.base.Event} oEvent the select event\n\t\t * @public\n\t\t */\n\t\tonSort: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the list selection event\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t * @public\n\t\t */\n\t\tonSelectionChange: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar fnLeave = function() {\n\t\t\t\tthat._oODataModel.resetChanges();\n\t\t\t\tthat._showDetail(oItem);\n\t\t\t};\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\t\t\t\tthis._leaveEditPage(fnLeave);\n\t\t\t} else {\n\t\t\t\tthis._showDetail(oItem);\n\t\t\t}\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t * @public\n\t\t */\n\t\tonBypassed: function() {\n\t\t\tthis._oList.removeSelections(true);\n\t\t},\n\n\t\t/**\n\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t * These headers are inserted into the master list to\n\t\t * group the master list's items.\n\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t * @public\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t */\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page\n\t\t * @override\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tthis.f_retornar_launchpad();\n\t\t\t// var oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t// \tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t// \toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\t// if (sPreviousHash !== undefined) {\n\t\t\t// \t// The history contains a previous entry\n\t\t\t// \thistory.go(-1);\n\t\t\t// } else {\n\t\t\t// \t// Navigate back to FLP home\n\t\t\t// \toCrossAppNavigator.toExternal({\n\t\t\t// \t\ttarget: {\n\t\t\t// \t\t\tshellHash: \"#Shell-home\"\n\t\t\t// \t\t}\n\t\t\t// \t});\n\t\t\t// }\n\t\t},\n\n\t\t/**\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\n\t\t * @public\n\t\t */\n\t\tonAdd: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tthis.getRouter().getTargets().display(\"create\");\n\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Creates the model for the view\n\t\t * @private\n\t\t */\n\t\t_createViewModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tisFilterBarVisible: false,\n\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\tdelay: 0,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\tsortBy: \"Qmtxt\",\n\t\t\t\tgroupBy: \"None\"\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\n\t\t * @param {object} fnLeave - handles discard changes\n\t\t * @param {object} fnLeaveCancelled - handles cancel\n\t\t * @private\n\t\t */\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\n\t\t\t// var sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\n\t\t\t// var sTitle = this.getResourceBundle().getText(\"warning\");\n\n\t\t\t// MessageBox.show(sQuestion, {\n\t\t\t// \ticon: MessageBox.Icon.WARNING,\n\t\t\t// \ttitle: sTitle,\n\t\t\t// \tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t// \tonClose: function(oAction) {\n\t\t\t// \t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t// \t\t\tfnLeave();\n\t\t\t// \t\t} else if (fnLeaveCancelled) {\n\t\t\t// \t\t\tfnLeaveCancelled();\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// });\n\t\t\tfnLeave();\n\t\t},\n\n\t\t/**\n\t\t * If the master route was hit (empty hash) we have to set\n\t\t * the hash to to the first item in the list as soon as the\n\t\t * listLoading is done and the first item in the list is known\n\t\t * @private\n\t\t */\n\t\t_onMasterMatched: function() {\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\t\t\tArbpl: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Arbpl\")),\n\t\t\t\t\t\t\tWerks: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Werks\")),\n\t\t\t\t\t\t\tQmnum: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmnum\")),\n\t\t\t\t\t\t\tQmart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmart\")),\n\t\t\t\t\t\t\tArtpr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Artpr\")),\n\t\t\t\t\t\t\tRbnr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Rbnr\")),\n\t\t\t\t\t\t\tQmgrp: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmgrp\"))\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// this.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t}.bind(this)\n\t\t\t);\n\n\t\t\t//Add jgiraldo \n\t\t\tif (!this.filtroIngreso) {\n\t\t\t\tthis.filtroIngreso = true;\n\t\t\t\t// this.f_filtro_aviso('CC15', 'TEC-PV00');\n\t\t\t\tthis.f_filtro_aviso(null, null);\n\t\t\t}\n\t\t},\n\n\t\t//Add Jhony\n\t\t_getDialog: function() {\n\t\t\tif (this.oPersonalizationDialog) {\n\t\t\t\treturn this.oPersonalizationDialog;\n\t\t\t}\n\n\t\t\t// associate controller with the fragment\n\t\t\tthis.oPersonalizationDialog = sap.ui.xmlfragment(\"com.corona.view.fragment.SelectCentroPuestoT\", this);\n\t\t\tthis.getView().addDependent(this.oPersonalizationDialog);\n\t\t\treturn this.oPersonalizationDialog;\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the detail page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showDetail: function(oItem) {\n\t\t\tvar bReplace = !Device.system.phone;\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tArbpl: encodeURIComponent(oItem.getBindingContext().getProperty(\"Arbpl\")),\n\t\t\t\tWerks: encodeURIComponent(oItem.getBindingContext().getProperty(\"Werks\")),\n\t\t\t\tQmnum: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmnum\")),\n\t\t\t\tQmart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmart\")),\n\t\t\t\tArtpr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Artpr\")),\n\t\t\t\tRbnr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Rbnr\")),\n\t\t\t\tQmgrp: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmgrp\"))\n\t\t\t}, bReplace);\n\t\t},\n\n\t\t/**\n\t\t * Sets the item count on the master list header\n\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t * @private\n\t\t */\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyGroupSort: function(aSorters) {\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t * @param {string} sFilterBarText the selected filter value\n\t\t * @private\n\t\t */\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that adds \"/\" to the item's path\n\t\t * @private\n\t\t */\n\t\t_fnGetPathWithSlash: function(sPath) {\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\n\t\t},\n\n\t\t/**\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item.\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\n\t\t * @private\n\t\t */\n\t\t_findItem: function() {\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\n\t\t\tif (itemToSelect) {\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\n\t\t\t\t\tif (oItem) {\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// this.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Se comenta código Generado por el Template para que no muestre el detalle @netw.\n\t\t\t\tif (!Device.system.phone) {\n\t\t\t\t\tthis._oListSelector.selectAListItem(sPath);\n\t\t\t\t\tthis._showDetail(oItem);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tf_filtro_aviso: function(p_centro, p_puesto) {\n\n\t\t\t//Add Jhony Giraldo\n\t\t\tvar filters = [];\n\t\t\tvar sFilter;\n\t\t\tvar query = p_puesto;\n\n\t\t\t//Add Jhony Giraldo\n\t\t\tif (p_centro === null) {\n\t\t\t\tthis._oList.getBinding(\"items\").filter(filters);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsFilter = new sap.ui.model.Filter(\"Arbpl\", sap.ui.model.FilterOperator.EQ, query);\n\t\t\tfilters.push(sFilter);\n\n\t\t\tquery = p_centro;\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\n\t\t\tfilters.push(sFilter);\n\n\t\t\tvar binding = this._oList.getBinding(\"items\");\n\t\t\tbinding.filter(filters);\n\t\t},\n\n\t\tf_get_puestos: function() {\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\n\n\t\t\tcombo_puesto.setBusy(true);\n\n\t\t\tvar filters = [];\n\t\t\tvar sFilter;\n\t\t\tvar query = combo_centro.getSelectedKey();\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\n\t\t\tfilters.push(sFilter);\n\t\t\tvar binding = combo_puesto.getBinding(\"items\");\n\t\t\tbinding.filter(filters);\n\n\t\t\tcombo_puesto.setBusy(false);\n\t\t},\n\n\t\tf_close_dialogo_puest_centr: function() {\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\n\n\t\t\tthis._oList.getBinding(\"items\").bClientOperation = false;\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Server;\n\n\t\t\tthis.f_filtro_aviso(combo_centro.getSelectedKey(), combo_puesto.getSelectedKey());\n\t\t\tthis.oPersonalizationDialog.close();\n\t\t},\n\n\t\tf_open_dialog_login: function() {\n\t\t\t//Agregar Dialogo\n\t\t\tvar oPersonalizationDialog = this._getDialog();\n\t\t\toPersonalizationDialog.open();\n\t\t},\n\n\t\tf_retornar_launchpad: function() {\n\t\t\tthis.oPersonalizationDialog.close();\n\t\t\t// The history contains a previous entry\n\t\t\thistory.go(-1);\n\t\t},\n\n\t\tf_buscar_avisos: function(evt) {\n\t\t\tif (!this.esprimerfiltro) {\n\t\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\n\n\t\t\t\tvar puesto_tra = sap.ui.getCore().getElementById(\"cmb_puesto_tra\").getSelectedKey();\n\t\t\t\tvar centro = sap.ui.getCore().getElementById(\"cmb_centro\").getSelectedKey();\n\n\t\t\t\tthis.f_filtro_aviso(centro, puesto_tra);\n\t\t\t}\n\n\t\t\tvar filers = [],\n\t\t\t\tquery = evt.getParameters().query,\n\t\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmnum\", sap.ui.model.FilterOperator.Contains, query);\n\n\t\t\tfilers.push(nameFilter);\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmtxt\", sap.ui.model.FilterOperator.Contains, query);\n\t\t\tfilers.push(nameFilter);\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Name1\", sap.ui.model.FilterOperator.Contains, query);\n\t\t\tfilers.push(nameFilter);\n\n\t\t\tvar oFilter = new sap.ui.model.Filter({\n\t\t\t\taFilters: filers,\n\t\t\t\tbAnd: false,\n\t\t\t\t_bMultiFilter: true\n\t\t\t});\n\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\n\t\t\tthis._oList.getBinding(\"items\").filter([oFilter]);\n\t\t},\n\n\t\tf_close_login: function() {\n\t\t\tthis.oPersonalizationDialog.close();\n\t\t}\n\t});\n});",
		"com/corona/view/Detail.view.xml": "<mvc:View controllerName=\"com.corona.controller.Detail\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:semantic=\"sap.m.semantic\" xmlns=\"sap.m\">\n\t<semantic:DetailPage busy=\"{detailView&gt;/busy}\" busyIndicatorDelay=\"{detailView&gt;/delay}\" id=\"page\" navButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device&gt;/system/phone}\" title=\"{i18n&gt;detailTitle}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" intro=\"{Werks} - {Puest}\" number=\"\" title=\"Número Aviso: {Qmnum}\"/>\n\t\t\t<Label id=\"labelMaterial\" text=\"Material\"></Label>\n\t\t\t<Input id=\"inputMaterial\" showValueHelp=\"true\" valueHelpOnly=\"true\" valueHelpRequest=\"f_ayuda_busqueda_material\"\n\t\t\tplaceholder=\"{i18n>placeHoldeMaterial}\"></Input>\n\t\t\t<Label id=\"labelInicio\" text=\"Inicio\" visible=\"false\"></Label>\n\t\t\t<DatePicker editable=\"false\" enabled=\"true\" id=\"dateFecha\" visible=\"false\"></DatePicker>\n\t\t\t<Input editable=\"false\" id=\"inputFecha\" type=\"Text\" value=\"{path: '/myDate', type:'sap.ui.model.type.Date'}\" visible=\"false\"></Input>\n\t\t\t<Table backgroundDesign=\"Translucent\" enableBusyIndicator=\"true\" fixedLayout=\"true\" footerText=\"\" growing=\"false\"\n\t\t\t\tgrowingScrollToLoad=\"false\" growingThreshold=\"20\" growingTriggerText=\"\" headerDesign=\"Standard\" headerText=\"\" id=\"tableCaracteristicas\"\n\t\t\t\tincludeItemInSelection=\"false\" itemPress=\"\" items=\"{/CaractMaterialSet}\" mode=\"None\" modeAnimationOn=\"true\"\n\t\t\t\tnoDataText=\"{i18n&gt;caracteristicas}\" rememberSelections=\"true\" showNoData=\"true\" showOverlay=\"false\" showSeparators=\"All\"\n\t\t\t\tshowUnread=\"false\" swipeDirection=\"Both\" visible=\"false\" width=\"100%\">\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"__item12\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Input editable=\"false\" id=\"inputCaractMaterialItem\" textAlign=\"Center\" type=\"Text\" value=\"{Descr}\"/>\n\t\t\t\t\t\t\t<Input extAlign=\"Center\" id=\"inputValorCaractMaterialItem\" showValueHelp=\"true\" type=\"{= ${Unit} !== '' ? 'Number' : 'Text'}\" value=\"{Value}\"\n\t\t\t\t\t\t\t\tvalueHelpRequest=\"f_ayuda_busqueda_caracteristica\"  valueHelpOnly=\"{= ${Addit} !== '' ? false : true}\"\n\t\t\t\t\t\t\t\tplaceholder=\"{= ${Addit} !== '' ? 'Seleccione o escriba acaracterística del material' : 'Seleccione característica del material' }\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column hAlign=\"Center\" id=\"__columnfmoderno4\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"labelMaterialItemColumn\" text=\"Característica Material\" textAlign=\"Center\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\" id=\"__columnfmoderno5\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Label design=\"Bold\" id=\"labelValorMaterialItem\" text=\"Valor Característica Material\" textAlign=\"Center\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t</Table>\n\t\t\t<!--<IconTabBar class=\"sapUiResponsiveContentPadding\" id=\"iconTabBar\">-->\n\t\t\t<!--\t<items>-->\n\t\t\t<!--\t\t<IconTabFilter icon=\"sap-icon://hint\" id=\"iconTabBarFilter1\" tooltip=\"{i18n&gt;detailIconTabBarInfo}\"/>-->\n\t\t\t<!--\t\t<IconTabFilter icon=\"sap-icon://attachment\" id=\"iconTabBarFilter2\" tooltip=\"{i18n&gt;detailIconTabBarAttachments}\"/>-->\n\t\t\t<!--\t</items>-->\n\t\t\t<!--</IconTabBar>-->\n\t\t</semantic:content>\n\t\t<!--<semantic:editAction>-->\n\t\t<!--<semantic:EditAction id=\"edit\" press=\"onEdit\" visible=\"false\"/>-->\n\t\t<!--</semantic:editAction>-->\n\t\t<!--<semantic:customFooterContent>-->\n\t\t<!--\t<Button enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\" visible=\"false\"/>-->\n\t\t<!--</semantic:customFooterContent>-->\n\t\t<!--<semantic:sendEmailAction>-->\n\t\t<!--\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\" visible=\"false\"/>-->\n\t\t<!--</semantic:sendEmailAction>-->\n\t\t<!--<semantic:shareInJamAction>-->\n\t\t<!--<semantic:ShareInJamAction id=\"shareInJam\" press=\"onShareInJamPress\" visible=\"{FLP&gt;/isShareInJamActive}\"/>-->\n\t\t<!--\t<semantic:ShareInJamAction id=\"shareInJam\" press=\"onShareInJamPress\" visible=\"false\"/>-->\n\t\t<!--</semantic:shareInJamAction>-->\n\t\t<!--<semantic:saveAsTileAction>-->\n\t\t<!--\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView&gt;/saveAsTileTitle}\" visible=\"false\"/>-->\n\t\t<!--</semantic:saveAsTileAction>-->\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction id=\"createOrden\" press=\"f_crearOrden\" text=\"Crear Orden\"/>\n\t\t</semantic:mainAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/corona/view/fragment/SelectCentroPuestoT.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\r\n\t<Dialog class=\"sapUiContentPadding\" title=\"Seleccione Centro - Puesto Trabajo\" xmlns:l=\"sap.ui.layout\">\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Centro\"/>\r\n\t\t\t\t\t<Select id=\"cmb_centro\" items=\"{/CentroSet}\" change=\"f_get_puestos\" width=\"100%\">\r\n\t\t\t\t\t\t<core:Item key=\"{Werks}\" text=\"{Werks} - {Name1}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Puesto Trabajo\"/>\r\n\t\t\t\t\t<Select id=\"cmb_puesto_tra\" items=\"{/PuestoTrabajoSet}\" width=\"100%\">\r\n\t\t\t\t\t\t<core:Item key=\"{Arbpl}\" text=\"{Arbpl} - {Denomi}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t\t<beginButton>\r\n\t\t\t<Button id=\"btn_cancela_moderno\" press=\"f_close_dialogo_puest_centr\" text=\"Cancelar\" type=\"Back\"/>\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button id=\"btn_moderno_select\" press=\"f_close_dialogo_puest_centr\" text=\"Ingresar\" type=\"Accept\"/>\r\n\t\t</endButton>\r\n\t</Dialog>\r\n</core:FragmentDefinition>",
		"com/corona/view/Master.view.xml": "<mvc:View controllerName=\"com.corona.controller.Master\" xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns=\"sap.m\">\n\t<semantic:MasterPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\" title=\"{masterView>/title}\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" search=\"f_buscar_avisos\" showRefreshButton=\"{= !${device>/support/touch} }\"\n\t\t\t\t\t\ttooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" placeholder=\"{i18n>placeHolderBuscar}\"/>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" refresh=\"onRefresh\" visible=\"{device>/support/touch}\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List busyIndicatorDelay=\"{masterView>/delay}\" growing=\"true\" growingScrollToLoad=\"true\" id=\"list\" items=\"{/AvisoSet}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" noDataText=\"{masterView>/noDataText}\" selectionChange=\"onSelectionChange\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" press=\"onOpenViewSettings\" visible=\"{masterView>/isFilterBarVisible}\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem number=\"{ path: 'Qmdat', type: 'sap.ui.model.type.Date', pattern: 'yyyyMMdd' }\"\n\t\t\t\t\t\tnumberUnit=\"{ path: 'Mzeit', type: 'sap.ui.model.odata.type.Time'}\" press=\"onSelectionChange\" title=\"{Qmnum}\"\n\t\t\t\t\t\ttype=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\">\n\t\t\t\t\t\t<firstStatus>\n\t\t\t\t\t\t\t<ObjectStatus state=\"Success\" text=\"{Qmartx}\"/>\n\t\t\t\t\t\t</firstStatus>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"{Name1}\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction enabled=\"{appView>/addEnabled}\" id=\"addButton\" press=\"onAdd\" visible=\"false\"/>\n\t\t</semantic:addAction>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction id=\"__action1\" press=\"f_open_dialog_login\" text=\"Login\"/>\n\t\t</semantic:mainAction>\n\t</semantic:MasterPage>\n</mvc:View>",
		"com/corona/controller/App.controller.js": "sap.ui.define([\n\t\"com/corona/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.corona.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0,\n\t\t\t\titemToSelect: null,\n\t\t\t\taddEnabled: false\n\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t// after a new list entry has been selected.\n\t\t\toListSelector.attachListSelectionChange(function() {\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t}, this);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t}\n\t});\n\n});",
		"com/corona/controller/CreateEntity.controller.js": "sap.ui.define([\n\t\"com/corona/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\"\n\n], function(BaseController, JSONModel, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.corona.controller.CreateEntity\", {\n\n\t\t_oBinding: {},\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\tvar that = this;\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tenableCreate: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tbusy: false,\n\t\t\t\tmode: \"create\",\n\t\t\t\tviewTitle: \"\"\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t\t// Register the view with the message manager\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonSave: function() {\n\t\t\tvar that = this,\n\t\t\t\toModel = this.getModel();\n\n\t\t\t// abort if the  model has not been changed\n\t\t\tif (!oModel.hasPendingChanges()) {\n\t\t\t\tMessageBox.information(\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\n\t\t\t\t// attach to the request completed event of the batch\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\tif (oParams.success) {\n\t\t\t\t\t\tthat._fnUpdateSuccess();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toModel.submitChanges();\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes.\n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonCancel: function() {\n\t\t\t// check if the model has been changed\n\t\t\tif (this.getModel().hasPendingChanges()) {\n\t\t\t\t// get user confirmation first\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\n\t\t\t} else {\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t// cancel without confirmation\n\t\t\t\tthis._navBack();\n\t\t\t}\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Internal functions\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Details page\n\t\t * @private\n\t\t */\n\t\t_navBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\n\t\t\tthis.getView().unbindObject();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\n\t\t * @private\n\t\t */\n\t\t_showConfirmQuitChanges: function() {\n\t\t\tvar oComponent = this.getOwnerComponent(),\n\t\t\t\toModel = this.getModel();\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\n\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\t\t\toModel.resetChanges();\n\t\t\t\t\t\t\tthat._navBack();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for editing the selected object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\t\t_onEdit: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\n\t\t\t\toView = this.getView();\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\n\n\t\t\toView.bindElement({\n\t\t\t\tpath: oData.objectPath\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for creating new object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\n\t\t_onCreate: function(oEvent) {\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\n\t\t\t\tthis.getView().unbindObject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\n\t\t\tvar oContext = this._oODataModel.createEntry(\"AvisoSet\", {\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\n\t\t\t});\n\t\t\tthis.getView().setBindingContext(oContext);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the save button can be enabled\n\t\t * @private\n\t\t */\n\t\t_validateSaveEnablement: function() {\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\n\t\t\tvar oControl;\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\n\t\t\t\toControl = aInputControls[m].control;\n\t\t\t\tif (aInputControls[m].required) {\n\t\t\t\t\tvar sValue = oControl.getValue();\n\t\t\t\t\tif (!sValue) {\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkForErrorMessages();\n\t\t},\n\n\t\t/**\n\t\t * Checks if there is any wrong inputs that can not be saved.\n\t\t * @private\n\t\t */\n\n\t\t_checkForErrorMessages: function() {\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\n\t\t\tif (aMessages.length > 0) {\n\t\t\t\tvar bEnableCreate = true;\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tbEnableCreate = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\n\t\t\t} else {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of updating an object\n\t\t * @private\n\t\t */\n\t\t_fnUpdateSuccess: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getView().unbindObject();\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of creating an object\n\t\t *@param {object} oData the response of the save action\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreated: function(oData) {\n\t\t\tvar sObjectPath = this.getModel().createKey(\"AvisoSet\", oData);\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the failure of creating/updating an object\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreationFailed: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t},\n\n\t\t/**\n\t\t * Handles the onDisplay event which is triggered when this view is displayed\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\n\t\t * @private\n\t\t */\n\t\t_onDisplay: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\");\n\t\t\tif (oData && oData.mode === \"update\") {\n\t\t\t\tthis._onEdit(oEvent);\n\t\t\t} else {\n\t\t\t\tthis._onCreate(oEvent);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Gets the form fields\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\n\t\t * @private\n\t\t */\n\t\t_getFormFields: function(oSimpleForm) {\n\t\t\tvar aControls = [];\n\t\t\tvar aFormContent = oSimpleForm.getContent();\n\t\t\tvar sControlType;\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\n\t\t\t\t\taControls.push({\n\t\t\t\t\t\tcontrol: aFormContent[i],\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aControls;\n\t\t}\n\t});\n\n});",
		"com/corona/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\"\n], function(Controller, History) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"com.corona.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t * @public\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Otherwise we go backwards with a forward history\n\t\t\t\tvar bReplace = true;\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\n\t\t\t}\n\t\t}\n\n\t});\n\n});",
		"com/corona/controller/ErrorHandler.js": "//Libreria de Utilidades.\r\njQuery.sap.require(\"com.corona/controller/Utilidades\");\r\n\r\nsap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"com.corona.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias com.corona.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\t\r\n\t\t\t// //Add @netw - Obtener mensaje de Error del \r\n\t\t\t// var msjError = f_obtener_msj_error(sDetails);\r\n\t\t\t\r\n\t\t\t// if (this._bMessageOpen) {\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\t\t\t// this._bMessageOpen = true;\r\n\t\t\t\r\n\t\t\t// //Add @netw - Asignar mensaje de error\r\n\t\t\t// this._sErrorText = msjError;\r\n\t\t\t\r\n\t\t\t// MessageBox.error(\r\n\t\t\t// \tthis._sErrorText, {\r\n\t\t\t// \t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t// \t\t//details: sDetails.responseText, //Comentado @netw\r\n\t\t\t// \t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t// \t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t// \t\tonClose: function() {\r\n\t\t\t// \t\t\tthis._bMessageOpen = false;\r\n\t\t\t// \t\t}.bind(this)\r\n\t\t\t// \t}\r\n\t\t\t// );\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/ListSelector.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/GroupHeaderListItem\"\n], function(BaseObject, GroupHeaderListItem) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"com.corona.model.ListSelector\", {\n\n\t\t/**\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t * function.\n\t\t * @class\n\t\t * @public\n\t\t * @alias com.corona.model.ListSelector\n\t\t */\n\n\t\tconstructor: function() {\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t}.bind(this));\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t.then(function(oList) {\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\tfunction(oData) {\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: false\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t * May only be invoked once per ListSelector instance.\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t * @public\n\t\t */\n\t\tsetBoundMasterList: function(oList) {\n\t\t\tthis._oList = oList;\n\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t},\n\n\t\t/**\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t * no selection/scrolling will happen\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t * @public\n\t\t */\n\t\tselectAListItem: function(sBindingPath) {\n\n\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toList.getItems().some(function(oItem) {\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction() {\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Removes all selections from master list.\n\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t * @public\n\t\t */\n\t\tclearMasterListSelection: function() {\n\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Find the next valid list item from the master list after the current.\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindNextItem: function(sCurrentPath) {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tvar iItemsCount = aItems.length;\n\t\t\tif (iItemsCount === 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (iItemsCount > 0) {\n\t\t\t\tvar bFound = false;\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\n\t\t\t\t\tvar oItem = aItems[i];\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\n\t\t\t\t\t\tif (bFound) {\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\n\t\t\t\t\t\t\t\treturn aItems[0];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!bFound) {\n\t\t\t\t\treturn null; //not valid\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Find the list item from a path.\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindListItem: function(sPath) {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\tvar oItem = aItems[i];\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\n\t\t\t\t\tif (bFound) {\n\t\t\t\t\t\treturn oItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null; //not found\n\t\t},\n\t\t/**\n\t\t * Find the first list item\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindFirstItem: function() {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tif (aItems && aItems.length > 0) {\n\t\t\t\treturn aItems[0];\n\t\t\t}\n\t\t\treturn null; //not found\n\t\t}\n\t});\n\n});",
		"com/corona/controller/Utilidades.js": "/**\r\n * Recibe un String XML y obtiene de este String el Error ocurrido en la ejecución del Servicio\r\n * @param {string} sError Error en formato XML\r\n * @public\r\n */\r\nfunction f_obtener_msj_error(sError){\r\n\t//Se hace un Split por el Tag <message> del XML\r\n\tvar ls_message = sError.responseText.split(\"<message>\"); \r\n\t\r\n\t//Luego se realiza otro Split por el Tag de finalización del Error </message>\r\n\tvar ls_error  = ls_message[1].split(\"</message>\");\r\n\t\r\n\t//Se hizo la validación y en el tag <message> </message> siempre trae el mismo mensaje\r\n\t//por lo tanto se escoge el primer mensaje\r\n\treturn ls_error[0];\r\n}",
		"com/corona/view/App.view.xml": "<mvc:View busy=\"{appView>/busy}\" busyIndicatorDelay=\"{appView>/delay}\" controllerName=\"com.corona.controller.App\" displayBlock=\"true\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\"/>\n</mvc:View>",
		"com/corona/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage description=\"\" icon=\"{sap-icon://product}\" id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\"\n\t\ttext=\"{i18n>noObjectsAvailableText}\" title=\"{i18n>notAvailableViewTitle}\"></MessagePage>\n</mvc:View>",
		"com/corona/view/fragment/BusyDialog.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<BusyDialog\r\n\t\ttitle=\"{i18n&gt;titleDialog}\"\r\n\t\ttext=\"{i18n&gt;textDialog}\"\r\n\t\tshowCancelButton=\"true\"\r\n\t\tclose=\"onDialogClosed\"/>\r\n</core:FragmentDefinition>",
		"com/corona/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage description=\"\" icon=\"{sap-icon://product}\" id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\"\n\t\ttext=\"{i18n>noObjectFoundText}\" title=\"{i18n>detailTitle}\"></MessagePage>\n</mvc:View>",
		"com/corona/view/fragment/DlgValorCaractMaterial.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_ValorCaractMaterial\"\n\t\ttitle=\"Seleccione Valor Característica\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\tplaceholder=\"Seleccione característica\"\n\t\t\n\t\titems=\"{\n\t\t\tpath : '/ValueCarctMaterialSet'\n\t\t}\"\n\t\t\n\t\t\n\t\tconfirm=\"f_confirm_valor_caracteristica\"\n\t\tcancel=\"f_confirm_valor_caracteristica\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Value}\"\n\t\t\tdescription=\"{Descr}\"/>\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\t/**\n\t\t * Rounds the currency value to 2 digits\n\t\t *\n\t\t * @public\n\t\t * @param {string} sValue value to be formatted\n\t\t * @returns {string} formatted currency value with 2 digits\n\t\t */\n\t\tcurrencyValue: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t}\n\t};\n\n});",
		"com/corona/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateFLPModel: function() {\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\toModel = new JSONModel({\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t});\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\t};\n\n});",
		"com/corona/view/fragment/DlgMaterial.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t\n\t<SelectDialog\n\t\tid=\"list_Material\"\n\t\ttitle=\"Seleccione Material\"\n\t\tclass=\"sapUiPopupWithPadding\"\n\t\t\t\t\n\t\t\n\t\titems=\"{\n\t\t\tpath : '/MaterialSet'\n\t\t}\"\n\t\t\n\t\tsearch=\"f_Search_material\"\n\t\tconfirm=\"f_confirm_material\"\n\t\tcancel=\"f_confirm_material\"\n\t\t>\n\t\t\n\t\t<StandardListItem\n\t\t\ttitle=\"{Matnr}\"\n\t\t\tdescription=\"{Maktx}\" />\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"com/corona/view/NotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage description=\"\" icon=\"{sap-icon://document}\" id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\"\n\t\ttext=\"{i18n>notFoundText}\" title=\"{i18n>notFoundTitle}\"></MessagePage>\n</mvc:View>",
		"com/corona/view/fragment/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">\n\t<ViewSettingsDialog confirm=\"onConfirmViewSettingsDialog\" id=\"viewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" key=\"Price\" multiSelect=\"false\" text=\"{i18n>masterFilterName}\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem id=\"viewFilter1\" key=\"Filter1\" text=\"{i18n>masterFilter1}\"/>\n\t\t\t\t\t<ViewSettingsItem id=\"viewFilter2\" key=\"Filter2\" text=\"{i18n>masterFilter2}\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",
		"com/corona/model/GroupSortState.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Sorter\"\n], function(BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"com.corona.model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @alias com.corona.model.GroupSortState\n\t\t */\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by Qmtxt, or by\n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function(sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by , or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function(sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Qmtxt\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"com/corona/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\n\tvar oMockServer,\n\t\t_sAppModulePath = \"com/corona/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\treturn {\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * @public\n\t\t */\n\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\tsEntity = \"AvisoSet\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure there is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUri: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\n\t\t}\n\t};\n\n});",
		"com/corona/view/CreateEntity.view.xml": "<mvc:View controllerName=\"com.corona.controller.CreateEntity\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\">\n\t<semantic:DetailPage busy=\"{viewModel>/busy}\" id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\">\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\"\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? 'Edit ZGWSD_CREARORDEN_SRV.Aviso': 'New ZGWSD_CREARORDEN_SRV.Aviso'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label required=\"true\" text=\"Work Center\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Arbpl_id\" liveChange=\"_validateSaveEnablement\" name=\"Arbpl\"\n\t\t\t\t\t\tvalue=\"{ path: 'Arbpl', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Plt for WorkCtr\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Werks_id\" liveChange=\"_validateSaveEnablement\" name=\"Werks\"\n\t\t\t\t\t\tvalue=\"{ path: 'Werks', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Notification\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmnum_id\" liveChange=\"_validateSaveEnablement\" name=\"Qmnum\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmnum', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Notifictn type\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmart_id\" liveChange=\"_validateSaveEnablement\" name=\"Qmart\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"PriorityType\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Artpr_id\" liveChange=\"_validateSaveEnablement\" name=\"Artpr\"\n\t\t\t\t\t\tvalue=\"{ path: 'Artpr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Notif.date\"/>\n\t\t\t\t\t<DateTimeInput dateValue=\"{ path: 'Qmdat'}\" enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmdat_id\" name=\"Qmdat\"\n\t\t\t\t\t\ttype=\"DateTime\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Notif. Time\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Mzeit_id\" liveChange=\"_validateSaveEnablement\" name=\"Mzeit\"\n\t\t\t\t\t\tvalue=\"{ path: 'Mzeit', type: 'sap.ui.model.odata.type.Time' , constraints:{ nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Description\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmtxt_id\" liveChange=\"_validateSaveEnablement\" name=\"Qmtxt\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmtxt', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Catalog profile\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Rbnr_id\" liveChange=\"_validateSaveEnablement\" name=\"Rbnr\"\n\t\t\t\t\t\tvalue=\"{ path: 'Rbnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:9, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"User Status\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Statusr_id\" liveChange=\"_validateSaveEnablement\" name=\"Statusr\"\n\t\t\t\t\t\tvalue=\"{ path: 'Statusr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Priority\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Priori_id\" liveChange=\"_validateSaveEnablement\" name=\"Priori\"\n\t\t\t\t\t\tvalue=\"{ path: 'Priori', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:1, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Code group\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmgrp_id\" liveChange=\"_validateSaveEnablement\" name=\"Qmgrp\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmgrp', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Coding\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Qmcod_id\" liveChange=\"_validateSaveEnablement\" name=\"Qmcod\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmcod', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Address number\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Adrnr_id\" liveChange=\"_validateSaveEnablement\" name=\"Adrnr\"\n\t\t\t\t\t\tvalue=\"{ path: 'Adrnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Name\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Name1_id\" liveChange=\"_validateSaveEnablement\" name=\"Name1\"\n\t\t\t\t\t\tvalue=\"{ path: 'Name1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Name 2\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Name2_id\" liveChange=\"_validateSaveEnablement\" name=\"Name2\"\n\t\t\t\t\t\tvalue=\"{ path: 'Name2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Street\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Street_id\" liveChange=\"_validateSaveEnablement\" name=\"Street\"\n\t\t\t\t\t\tvalue=\"{ path: 'Street', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:60, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Street 3\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Street2_id\" liveChange=\"_validateSaveEnablement\" name=\"Street2\"\n\t\t\t\t\t\tvalue=\"{ path: 'Street2', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"City\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"City1_id\" liveChange=\"_validateSaveEnablement\" name=\"City1\"\n\t\t\t\t\t\tvalue=\"{ path: 'City1', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:40, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Telephone\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Tele_id\" liveChange=\"_validateSaveEnablement\" name=\"Tele\"\n\t\t\t\t\t\tvalue=\"{ path: 'Tele', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Celu\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Celu_id\" liveChange=\"_validateSaveEnablement\" name=\"Celu\"\n\t\t\t\t\t\tvalue=\"{ path: 'Celu', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:30, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Bita\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Bita_id\" liveChange=\"_validateSaveEnablement\" name=\"Bita\"\n\t\t\t\t\t\tvalue=\"{ path: 'Bita', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t\t<Label required=\"true\" text=\"Pric\"/>\n\t\t\t\t\t<Input enabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" id=\"Pric_id\" liveChange=\"_validateSaveEnablement\" name=\"Pric\"\n\t\t\t\t\t\tvalue=\"{ path: 'Pric', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\" valueLiveUpdate=\"true\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction enabled=\"{viewModel>/enableCreate}\" id=\"save\" press=\"onSave\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"></semantic:CancelAction>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>"
	}
});